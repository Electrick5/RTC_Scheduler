esphome:
  name: "schedule-test"
  libraries:
    - "Wire"
  on_boot:
    then:
        - ds1307.read_time:
esp32:
  board: esp32dev
  framework:
    type: arduino

api:
  password: !secret api_password
  

ota:
  password: !secret ota_password

logger:
    baud_rate: 0
    # Enable fallback hotspot (captive portal) in case wifi connection fails
    level: DEBUG
    logs: 
        api: DEBUG
        homeassistant: DEBUG
        nextion: DEBUG
        api.service: DEBUG
        sensor: DEBUG
        scheduler: DEBUG
        dallas: DEBUG


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-C34484"
    password: "hlVBVePNuBE3"

captive_portal:
uart:
  rx_pin: GPIO16 
  tx_pin: GPIO17 
  baud_rate: 115200

time:
  - platform: ds1307
    id: rtc_time
    # repeated synchronization is not necessary unless the external RTC
    # is much more accurate than the internal clock
    update_interval: never
    on_time:
      # Every 60 seconds
      - seconds: /60
        
        then:
          - lambda: |-
                ESP_LOGD("main", "Debug output every 60 seconds"); 
        
    
  - platform: homeassistant
    # instead try to synchronize via network repeatedly ...
    on_time_sync:
      then:
        # ... and update the RTC when the synchronization was successful
        ds1307.write_time:
        
http_request:

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true    
  
ext_eeprom_component:
  id: ext_eeprom_component_1
  address: 0x57 
  pollWriteComplete: true
  writeTime: 5
  pageSize: 32
  memorySize: 4096
  
rtc_scheduler:
  - id: scheduler_hub
    schedulers:
      - id: scheduler_1
        storage: ext_eeprom_component_1
        storage_offset: 1000
        storage_size: 32768
        max_events_per_switch: 56
        schedule_controller_status_id: "Heater Sheduler Status"
        scheduler_mode: "Heater Controller Mode"
        scheduler_ind: "Heater Indicator"
        main_switch: 
          name: "Heater Scheduler"
          on_turn_on:
            then:
              - logger.log: "Heater Turned On by action!"
        
        switches:
          - scheduled_mode: "Element 1 Mode"
            scheduled_switch: 
              name: "Element 1"
              on_turn_on:
                then:
                - logger.log: "element 1 Turned On by action!"
            scheduled_switch_id: relay3
            scheduler_slot: 1
            scheduled_status: "Element 1 Status"
            scheduled_next_event_text: "Element 1 Next Event"
            
            scheduled_indicator: "Element 1 Indicator"
          - scheduled_switch: "Element 2"
            scheduled_switch_id: relay4 
            scheduler_slot: 2  
            scheduled_status: "Element 2 Status"
            scheduled_mode: "Element 2 Mode"
            scheduled_indicator: "Element 2 Indicator"    
      - id: scheduler_2
        storage: ext_eeprom_component_1
        storage_offset: 2000
        storage_size: 32768
        max_events_per_switch: 56
        main_switch: "Pump Scheduler"
        schedule_controller_status_id: "Pump Scheduler Status"
        scheduler_mode: "Pump Controller Mode"
        scheduler_ind: "Pump Indicator"
        switches:
          - scheduled_switch: "Pump 1"
            scheduled_switch_id: relay3
            scheduler_slot: 3
            scheduled_status: "Pump 1 Status"
            scheduled_mode: "Pump 1 Mode"
            scheduled_indicator: "Pump 1 Indicator"
          - scheduled_switch: "Water Valve"
            scheduled_switch_id: relay4 
            scheduler_slot: 4        
            scheduled_status: "Water Valve Status"
            scheduled_mode: "Water Valve Mode"
            scheduled_indicator: "Water Valve Indicator"

switch:
  - platform: gpio
    name: "relay3"
    id: relay3
    pin: GPIO13
  - platform: gpio
    name: "relay1"
    pin: GPIO27
  - platform: gpio
    name: "relay2"
    pin: GPIO26
  - platform: gpio
    name: "relay4"
    id: relay4
    pin: GPIO25
  - platform: template
    name: "Test Valid Switch"
    id: "test_valid_switch"
    turn_on_action:
        - lambda: |-
              id(test_valid_switch).publish_state(true);
              id(scheduler_1).Test_Set_Slot_Valid(1,true);
              ESP_LOGD("main", "Slot 1 valid");
    turn_off_action:
      - lambda: |-
              id(test_valid_switch).publish_state(false);
              id(scheduler_1).Test_Set_Slot_Valid(1,false);
              ESP_LOGD("main", "Slot 1 not valid");
  - platform: template
    name: "Test State Switch"
    id: "test_state_switch"
    turn_on_action:
        - lambda: |-
              id(test_state_switch).publish_state(true);
              id(scheduler_1).Test_Set_Slot_Sw(1,true);
              ESP_LOGD("main", "Slot 1 On");
    turn_off_action:
      - lambda: |-
              id(test_state_switch).publish_state(false);
              id(scheduler_1).Test_Set_Slot_Sw(1,false);
              ESP_LOGD("main", "Slot 1 Off");      
